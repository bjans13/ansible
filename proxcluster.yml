---
- name: Update and Reboot Linux Servers if Required
  hosts: servers
  become: yes
  serial: 1  # Run one server at a time
  tasks:
    - name: Gather facts
      setup:

    - block:
        - name: Update package lists (Debian)
          apt:
            update_cache: yes
          when: ansible_os_family == "Debian"
          ignore_errors: yes

        - name: Upgrade all packages (Debian)
          apt:
            upgrade: dist
          when: ansible_os_family == "Debian"
          ignore_errors: yes

        - name: Autoremove unnecessary packages (Debian)
          apt:
            autoremove: yes
          when: ansible_os_family == "Debian"
          ignore_errors: yes

        - name: Check if reboot is required (Debian)
          stat:
            path: /var/run/reboot-required
          register: reboot_required
          when: ansible_os_family == "Debian"
          ignore_errors: yes

        - name: Debug - Show if reboot is required
          debug:
            msg: "Reboot required: {{ reboot_required.stat.exists | bool }}"

      rescue:
        - name: Log failure and continue
          debug:
            msg: "Node {{ inventory_hostname }} failed during update. Moving to the next node."
      
    - block:
        - name: Reboot server if needed
          command: /sbin/shutdown -r now "Ansible triggered reboot"
          when: reboot_required.stat.exists
          async: 1
          poll: 0

        - name: Wait for server to come back online
          wait_for:
            host: "{{ inventory_hostname }}"
            port: 22
            state: started
            delay: 30
            timeout: 420
          when: reboot_required.stat.exists  # <-- Skip if reboot is not required

      rescue:
        - name: Log failure to reconnect and continue
          debug:
            msg: "Failed to reconnect to {{ inventory_hostname }} within the timeout period. Moving to the next node."
