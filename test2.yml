---
- name: Update and Reboot Linux Servers if Required
  hosts: servers
  become: yes
  tasks:
    - name: Gather facts
      setup:

    - name: Update package lists (Debian)
      apt:
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Update package lists (RedHat)
      yum:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Upgrade all packages (Debian)
      apt:
        upgrade: dist
      when: ansible_os_family == "Debian"

    - name: Upgrade all packages (RedHat)
      yum:
        name: "*"
        state: latest
      when: ansible_os_family == "RedHat"

    - name: Autoremove unnecessary packages (Debian)
      apt:
        autoremove: yes
      when: ansible_os_family == "Debian"

    - name: Check if reboot is required (Debian)
      stat:
        path: /var/run/reboot-required
      register: reboot_required
      when: ansible_os_family == "Debian"

    - name: Check if reboot is required (RedHat)
      command: needs-restarting -r
      register: redhat_reboot_required
      ignore_errors: yes
      when: ansible_os_family == "RedHat"

    - name: Display if reboot is required
      debug:
        msg: "Reboot required!"
      when: reboot_required.stat.exists or redhat_reboot_required.rc == 1

    - name: Reboot servers if required
      reboot:
        post_reboot_delay: 150
      when: reboot_required.stat.exists or redhat_reboot_required.rc == 1

    - name: Check if SSH is back online after reboot
      wait_for:
        host: "{{ inventory_hostname }}"
        port: 22
        state: started
        delay: 30
        timeout: 300
